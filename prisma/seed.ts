import { PrismaClient } from '@prisma/client'
import fs from 'fs'
import path from 'path'

const prisma = new PrismaClient()

interface ImportedProfile {
  name: string
  year: string
  dev: boolean
  des: boolean
  pm: boolean
  core: boolean
  mentor: boolean
  major: string
  minor: string | null
  birthday: string
  home: string
  quote: string
  'favorite thing 1': string
  'favorite thing 2': string
  'favorite thing 3': string
  'favorite dartmouth tradition': string | null
  'fun fact': string | null
  picture: string | null
}

interface ImportedClub {
  name: string,
  description: string,
  img?: string | null
}

interface ImportedPost {
  userId: number,
  clubId: number,
  text: string,
  date: string
}

async function main() {
  // load clubs
  const clubJson = path.join(__dirname, 'clubs.seed.json')
  const clubs: ImportedClub[] = JSON.parse(fs.readFileSync(clubJson, 'utf-8'))
  await prisma.club.createMany({ data: clubs })
  console.log(`✅ Seeded ${clubs.length} clubs.`)

  // load users
  const jsonPath = path.join(__dirname, 'profiles.seed.json')
  const importedProfiles: ImportedProfile[] = JSON.parse(fs.readFileSync(jsonPath, 'utf-8'))
  for (const person of importedProfiles) {
    const roles: string[] = []
    if (person.dev) roles.push('Developer')
    if (person.des) roles.push('Designer')
    if (person.pm) roles.push('Product Manager')
    if (person.core) roles.push('Core')
    if (person.mentor) roles.push('Mentor')

    await prisma.user.create({
      data: {
        name: person.name,
        year: isNaN(Number(person.year)) ? null : Number(person.year),
        roles,
        major: person.major,
        minor: person.minor?.trim() || null,
        birthday: person.birthday,
        locale: person.home,
        quote: person.quote,
        favThings: [
          person['favorite thing 1'],
          person['favorite thing 2'],
          person['favorite thing 3'],
        ],
        funFact: person['fun fact'] ?? '',
        tradition: person['favorite dartmouth tradition'] ?? '',
        img: person.picture ?? null,
        clubs: { create: {
          clubId: 1 // add to DALI lab
        }}
      }
    });
  }
  console.log(`✅ Seeded ${importedProfiles.length} users.`)

  await prisma.user.create({
    data: {
      name: "Diogo Silva",
      year: 2028,
      roles: ["Developer"],
      major: "Computer Science",
      minor: null,
      birthday: "12-20",
      locale: "Brazil",
      quote: "You miss 100% of the shots you don't take - Wayne Gretzky - Michael Scott",
      favThings: [
        "The beach",
        "Italian food",
        "Cute dogs"
      ],
      funFact: "Dual citizen of Brazil & Italy!",
      tradition: 'Green Key',
      img: null,
      clubs: { create: [
        { clubId: 1 },
        { clubId: 2 },
        { clubId: 3 } // join all clubs
      ]}
    }
  })

  // seed posts (generated by AI for mock purposes)
  const postJson = path.join(__dirname, 'posts.seed.json')
  const posts: ImportedPost[] = JSON.parse(fs.readFileSync(postJson, 'utf-8'))

  await prisma.post.createMany({ data: posts })
  console.log(`✅ Seeded ${posts.length} posts.`)
}

main()
  .then(() => prisma.$disconnect())
  .catch((e) => {
    console.error(e)
    prisma.$disconnect()
    process.exit(1)
  })
